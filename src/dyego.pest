program = { SOI ~ statement* ~ EOI }

statement = { variable_statement | function_definition | value_type_declaration }

value_type_declaration = { "value" ~ identifier ~ "(" ~ (value_field ~ ("," ~ value_field)*)? ~ ")" ~ block }
value_field = { mutability ~ identifier ~ ":" ~ type }

function_definition = { "fun" ~ identifier ~ parameter_list ~ (":" ~ type)? ~ block }
parameter_list = { "(" ~ (parameter ~ ("," ~ parameter)*)? ~ ")" }
parameter = { identifier ~ ":" ~ type }
block = { "{" ~ statement* ~ expression? ~ "}" }

variable_statement = { mutability ~ identifier ~ "=" ~ expression }
mutability = { "val" | "var" }

expression = { literal }

WHITESPACE = _{ " " | "\t" | "\r" | "\n" }
COMMENT = _{ "//" ~ (!"\n" ~ ANY)* }

identifier = @{ (ASCII_ALPHA | "_") ~ (ASCII_ALPHANUMERIC | "_")* }

primitive_type = { ^"i8" | ^"i16" | ^"i32" | ^"i64" | ^"u8" | ^"u16" | ^"u32" | ^"u64" | ^"f32" | ^"f64" | ^"Boolean" | ^"Rune" | ^"String" }
user_type = { identifier }
base_type = { primitive_type | user_type }
specifier = { "[]" | "?" }
postfix_type = { base_type ~ specifier* }
type = { postfix_type ~ ("|" ~ postfix_type)* }

string_literal = @{ "\"" ~ ("\\\"" | !("\"") ~ ANY)* ~ "\"" }
integer_literal = @{ "-"? ~ ASCII_DIGIT+ }
float_literal = @{ "-"? ~ ASCII_DIGIT+ ~ "." ~ ASCII_DIGIT+ }
boolean_literal = @{ "true" | "false" }
null_literal = @{ "null" }

literal = { string_literal | integer_literal | float_literal | boolean_literal | null_literal }